
# configserver

app:
  adminPublicKey: ${APP_ADMINPUBLICKEY:RSA1024_PUB_X509:MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC/gmBcdQZxiQmhQrP1awAZuuOl4snl7cEV8n65osVO7CdqxXG5mUYNVr6siwuTm/SsmBV+86JISlzvMK/Bxwsmf/ApZicgItChmDuU9TCaZIksqnpbtONnCm/sHWwa/2hqPTjdc0LC+jQ/FCU2b9vpbSId0Wg28/gtoGaLWbsm/QIDAQAB}
  git.file.config.password.key: spring.cloud.config.password
  admin: 
    # userName: oss_admin
    # password: admin_pass
    logAdminPassowrd: true

logging.level.: ${LOGGING_LEVEL_:INFO}
logging:
  file: ${LOGGING_FILE:oss-configserver}.log
  path: ${LOGGING_PATH:${user.home}/.oss/oss-configserver/logs}
  level:
    jndi: ${LOGGING_LEVEL_:INFO}
    com.zaxxer.hikari.pool: ${LOGGING_LEVEL_:INFO}
    cn.home1.oss.lib.common.FileAndClasspathUtils$AssignableFilter: ${LOGGING_LEVEL_:INFO}
    org.eclipse.jetty: ${LOGGING_LEVEL_:INFO}
    org.eclipse.jetty.jndi: ${LOGGING_LEVEL_:INFO}
    org.eclipse.jetty.server.session: ${LOGGING_LEVEL_:INFO}
    org.eclipse.jetty.util.DecoratedObjectFactory: ${LOGGING_LEVEL_:INFO}
    org.springframework.amqp: ${LOGGING_LEVEL_:INFO}
    org.springframework.beans.factory.annotation.InjectionMetadata: ${LOGGING_LEVEL_:INFO}
    org.springframework.beans.factory.support.DefaultListableBeanFactory: ${LOGGING_LEVEL_:INFO}
    org.springframework.core.env.MutablePropertySources: ${LOGGING_LEVEL_:INFO}
    org.springframework.core.env.PropertySourcesPropertyResolver: ${LOGGING_LEVEL_:INFO}
    org.springframework.jndi: ${LOGGING_LEVEL_:INFO}
    org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: INFO
    org.springframework.web.context.support.StandardServletEnvironment: ${LOGGING_LEVEL_:INFO}
    org.springframework.security: ${LOGGING_LEVEL_:INFO}

endpoints.health.sensitive: true

management:
  #port:
  context-path: ${MANAGEMENT_CONTEXTPATH:/manage}
  security:
    enabled: true
    roles: ADMIN # no ROLE_ prefix here

server:
  port: ${SERVER_PORT:8888}
  tomcat:
    accesslog:
      # Enable access log:
      enabled: true
      # Directory in which log files are created. Can be relative to the tomcat base dir or absolute:
      directory: logs
      # Format pattern for access logs:
      # https://tomcat.apache.org/tomcat-8.0-doc/config/valve.html#Access_Log_Valve
      pattern: '%h %l %u %t "%r" %s %b %D'
      # Log file name suffix:
      suffix: .log

spring.cloud:
  client.hostname: ${SPRING_CLOUD_CLIENT_HOSTNAME:oss-configserver.local}
  config:
    monitor.endpoint.path: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_ENDPOINT_PATH:/config}
    server:
      defaultLabel: ${SPRING_CLOUD_CONFIG_SERVER_DEFAULTLABEL:master}
      defaultProfile: ${SPRING_CLOUD_CONFIG_SERVER_DEFAULTPROFILE:default}
      deployKey: ${SPRING_CLOUD_CONFIG_SERVER_DEPLOYKEY:classpath:default_deploy_key} # A custom property
      deployKeyPub: ${SPRING_CLOUD_CONFIG_SERVER_DEPLOYKEY:classpath:default_deploy_key.pub}
      prefix: /config
      git:
        uri: ${GIT_PREFIX:ssh://git@gitlab.local:20022/home1-oss}/{application}-config.git # SSH
        #uri: ${GIT_PREFIX:https://gitlab.local:10080/home1-oss}/all-applications-in-one-repo-config.git # can use wildcard
        #uri: ${GIT_PREFIX:http://gitlab.local:10080/home1-oss}/{application}-config.git # can use wildcard # http or https
        #username: git_username
        #password: git_password
        #uri: ${GIT_PREFIX:git@gitlab.internal:home1-oss}/{application}-config.git # SSH
        #searchPaths: src/main/resources # search locations
        #basedir: /var/configserver # default is /tmp, file lost after restart
        #repos:  # multi repos, match by 'application/profile'
        #  simple: https://github.com/simple/config-repo
        #  special:
        #    pattern: special*/dev*,*special*/dev*
        #    uri: ${GIT_PREFIX:git@gitlab.internal:home1-oss}/some-application.git
        #    searchPaths: src/main/resources
      #overrides: # override properties
      #  test_a: bbb
      #  test_b: aaa
      monitor:
        bitbucket.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_BITBUCKET_ENABLED:false}
        github.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_GITHUB_ENABLED:false}
        gitlab.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_GITLAB_ENABLED:false}
        gitlabpath.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_GITLABPATH_ENABLED:true}
        gogspath.enabled: ${SPRING_CLOUD_CONFIG_SERVER_MONITOR_GITLABPATH_ENABLED:true}
        
eureka:
  instance:
    # eureka.instance.hostname affect Status->instances's url href (not text) value on dashboard
    hostname: ${EUREKA_INSTANCE_HOSTNAME:oss-configserver.local}
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:false}
    # eureka.instance.instance-id affect Status->instances's url text (not href) value on dashboard
    instance-id: ${spring.application.name}:${EUREKA_INSTANCE_HOSTNAME:oss-configserver.local}:${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:8888}}:${random.value}
    nonSecurePort: ${EUREKA_INSTANCE_NONSECUREPORT:8888}
    leaseRenewalIntervalInSeconds: 10
    statusPageUrlPath: ${server.context-path:${SERVER_CONTEXTPATH:}}${management.context-path:${MANAGEMENT_CONTEXTPATH:}}${endpoints.info.path:/info}
    healthCheckUrlPath: ${server.context-path:${SERVER_CONTEXTPATH:}}${management.context-path:${MANAGEMENT_CONTEXTPATH:}}${endpoints.health.path:/health}
    # Registering a Secure Application
    #statusPageUrl: https://${eureka.instance.hostname}${endpoints.info.path:/info}
    #healthCheckUrl: https://${eureka.instance.hostname}${endpoints.health.path:/health}
    #homePageUrl: https://${eureka.instance.hostname}/
    metadataMap:
      #instance-id: ${spring.application.name}:${EUREKA_INSTANCE_HOSTNAME:oss-configserver.local}:${EUREKA_INSTANCE_NONSECUREPORT:${SERVER_PORT:8888}}:${random.value}
      #user: ${security.user.name} # hide admin user
      #password: ${security.user.password} # hide admin password
      configPath: ${spring.cloud.config.server.prefix}
      management.context-path: ${server.context-path:${SERVER_CONTEXTPATH:}}${management.context-path:${MANAGEMENT_CONTEXTPATH:}}
      management.port: ${management.port:${MANAGEMENT_PORT:${server.port:${SERVER_PORT:8080}}}}
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://user:user_pass@oss-eureka.local:8761/eureka/}

spring:
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:cloudbus.local}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:user}
    password: ${SPRING_RABBITMQ_PASSWORD:user_pass}

---
spring:
  profiles: default

---
spring:
  profiles: development.env

spring.resources:
  cache-period: 0

---
spring:
  profiles: ut.env

---
spring:
  profiles: it.env

---
spring:
  profiles: staging.env

---
spring:
  profiles: production.env

spring.resources:
  cache-period: 86400